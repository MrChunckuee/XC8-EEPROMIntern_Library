

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Sep 06 18:40:18 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.35
    24                           ; Generated 05/05/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F25K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007D8D                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for USER_EEPROMTest@F5775
    64  007D8D  0A                 	db	10
    65  007D8E  0B                 	db	11
    66  007D8F  0C                 	db	12
    67  007D90  0D                 	db	13
    68  007D91  0E                 	db	14
    69  0000                     _EECON2	set	4007
    70  0000                     _EEDATA	set	4008
    71  0000                     _PORTA	set	3968
    72  0000                     _LATA	set	3977
    73  0000                     _TRISA	set	3986
    74  0000                     _OSCTUNEbits	set	3995
    75  0000                     _OSCCONbits	set	4051
    76  0000                     _ANSELC	set	3898
    77  0000                     _ANSELB	set	3897
    78  0000                     _ANSELA	set	3896
    79  0000                     _INTCONbits	set	4082
    80  0000                     _PIR2bits	set	4001
    81  0000                     _EECON1bits	set	4006
    82  0000                     _EEADR	set	4009
    83  0000                     _TRISC	set	3988
    84  0000                     _TRISB	set	3987
    85  0000                     _LATC	set	3979
    86  0000                     _LATB	set	3978
    87  0000                     _PORTC	set	3970
    88  0000                     _PORTB	set	3969
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  007DD2                     __pcinit:
    94                           	callstack 0
    95  007DD2                     start_initialization:
    96                           	callstack 0
    97  007DD2                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (5 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102  007DD2  0E8D               	movlw	low __pidataCOMRAM
   103  007DD4  6EF6               	movwf	tblptrl,c
   104  007DD6  0E7D               	movlw	high __pidataCOMRAM
   105  007DD8  6EF7               	movwf	tblptrh,c
   106  007DDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107  007DDC  6EF8               	movwf	tblptru,c
   108  007DDE  EE00  F01A         	lfsr	0,__pdataCOMRAM
   109  007DE2  EE10 F005          	lfsr	1,5
   110  007DE6                     copy_data0:
   111  007DE6  0009               	tblrd		*+
   112  007DE8  CFF5 FFEE          	movff	tablat,postinc0
   113  007DEC  50E5               	movf	postdec1,w,c
   114  007DEE  50E1               	movf	fsr1l,w,c
   115  007DF0  E1FA               	bnz	copy_data0
   116  007DF2                     end_of_initialization:
   117                           	callstack 0
   118  007DF2                     __end_of__initialization:
   119                           	callstack 0
   120  007DF2  0100               	movlb	0
   121  007DF4  EFD1  F03E         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	dataCOMRAM
   124  00001A                     __pdataCOMRAM:
   125                           	callstack 0
   126  00001A                     USER_EEPROMTest@F5775:
   127                           	callstack 0
   128  00001A                     	ds	5
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133  000001                     EEPROMInternal_Read@EEDIR:
   134                           	callstack 0
   135  000001                     EEPROMInternal_Write@EEVAL:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	1
   140  000002                     ?_EEPROMInternal_IntRead:
   141                           	callstack 0
   142  000002                     EEPROMInternal_Write@EEDIR:
   143                           	callstack 0
   144  000002                     EEPROMInternal_ReadBuffer@EEBUFFER:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x1
   148  000002                     	ds	1
   149  000003                     EEPROMInternal_Write@GIEBitStatus:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x2
   153  000003                     	ds	1
   154  000004                     ??_EEPROMInternal_IntRead:
   155  000004                     EEPROMInternal_ReadBuffer@LEN:
   156                           	callstack 0
   157  000004                     EEPROMInternal_IntWrite@AARG:
   158                           	callstack 0
   159  000004                     EEPROMInternal_WriteBuffer@EEBUFFER:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x3
   163  000004                     	ds	1
   164  000005                     EEPROMInternal_ReadBuffer@EEDIR:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  000005                     	ds	1
   169  000006                     EEPROMInternal_IntWrite@LSB_INT:
   170                           	callstack 0
   171  000006                     EEPROMInternal_WriteBuffer@LEN:
   172                           	callstack 0
   173  000006                     EEPROMInternal_ReadBuffer@BUFF_COUNT:
   174                           	callstack 0
   175  000006                     EEPROMInternal_IntRead@AARG:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x5
   179  000006                     	ds	1
   180  000007                     EEPROMInternal_IntWrite@MSB_INT:
   181                           	callstack 0
   182  000007                     EEPROMInternal_WriteBuffer@EEDIR:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x6
   186  000007                     	ds	1
   187  000008                     EEPROMInternal_IntRead@MSB_INT:
   188                           	callstack 0
   189  000008                     EEPROMInternal_IntWrite@EEDIR:
   190                           	callstack 0
   191  000008                     EEPROMInternal_WriteBuffer@BUFF_COUNT:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x7
   195  000008                     	ds	1
   196  000009                     EEPROMInternal_IntRead@LSB_INT:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x8
   200  000009                     	ds	1
   201  00000A                     EEPROMInternal_IntRead@EEDIR:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x9
   205  00000A                     	ds	1
   206  00000B                     ??_USER_EEPROMTest:
   207                           
   208                           ; 1 bytes @ 0xA
   209  00000B                     	ds	2
   210  00000D                     USER_EEPROMTest@wEEPROM_BUFF:
   211                           	callstack 0
   212                           
   213                           ; 5 bytes @ 0xC
   214  00000D                     	ds	5
   215  000012                     USER_EEPROMTest@rEEPROM_BUFF:
   216                           	callstack 0
   217                           
   218                           ; 5 bytes @ 0x11
   219  000012                     	ds	5
   220  000017                     USER_EEPROMTest@rwEEPROM_tempINT:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x16
   224  000017                     	ds	2
   225  000019                     USER_EEPROMTest@rwEEPROM_temp:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x18
   229  000019                     	ds	1
   230  00001A                     
   231                           ; 1 bytes @ 0x19
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 28 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   251 ;;      Params:         0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 3
   257 ;; This function calls:
   258 ;;		_MCU_Init
   259 ;;		_USER_EEPROMTest
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text0
   266  007DA2                     __ptext0:
   267                           	callstack 0
   268  007DA2                     _main:
   269                           	callstack 28
   270  007DA2                     
   271                           ;main.c: 29:     MCU_Init();
   272  007DA2  EC4C  F03F         	call	_MCU_Init	;wreg free
   273  007DA6                     
   274                           ;main.c: 30:     USER_EEPROMTest();
   275  007DA6  EC8A  F03F         	call	_USER_EEPROMTest	;wreg free
   276  007DAA                     l51:
   277  007DAA  EFD5  F03E         	goto	l51
   278  007DAE  EF00  F000         	goto	start
   279  007DB2                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function _USER_EEPROMTest *****************
   283 ;; Defined at:
   284 ;;		line 61 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  rEEPROM_BUFF    5   17[COMRAM] unsigned char [5]
   289 ;;  wEEPROM_BUFF    5   12[COMRAM] unsigned char [5]
   290 ;;  rwEEPROM_tem    2   22[COMRAM] unsigned short 
   291 ;;  rwEEPROM_tem    1   24[COMRAM] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   301 ;;      Params:         0       0       0       0       0       0       0
   302 ;;      Locals:        13       0       0       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0       0       0
   304 ;;      Totals:        15       0       0       0       0       0       0
   305 ;;Total ram usage:       15 bytes
   306 ;; Hardware stack levels used: 1
   307 ;; Hardware stack levels required when called: 2
   308 ;; This function calls:
   309 ;;		_EEPROMInternal_IntRead
   310 ;;		_EEPROMInternal_IntWrite
   311 ;;		_EEPROMInternal_Read
   312 ;;		_EEPROMInternal_ReadBuffer
   313 ;;		_EEPROMInternal_Write
   314 ;;		_EEPROMInternal_WriteBuffer
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text1
   321  007F14                     __ptext1:
   322                           	callstack 0
   323  007F14                     _USER_EEPROMTest:
   324                           	callstack 28
   325  007F14                     
   326                           ;main.c: 64:     uint8_t wEEPROM_BUFF[5] = {0x0A, 0x0B, 0x0C,
   327  007F14  EE20  F01A         	lfsr	2,USER_EEPROMTest@F5775
   328  007F18  EE10  F00D         	lfsr	1,USER_EEPROMTest@wEEPROM_BUFF
   329  007F1C  0E04               	movlw	4
   330  007F1E                     u111:
   331  007F1E  CFDB FFE3          	movff	plusw2,plusw1
   332  007F22  06E8               	decf	wreg,f,c
   333  007F24  E2FC               	bc	u111
   334  007F26                     
   335                           ;main.c: 66:     uint8_t rEEPROM_BUFF[5];;main.c: 68:     rwEEPROM_temp = EEPROMInternal
      +                          _Read(0x00);
   336  007F26  0E00               	movlw	0
   337  007F28  ECC9  F03E         	call	_EEPROMInternal_Read
   338  007F2C  6E19               	movwf	USER_EEPROMTest@rwEEPROM_temp^0,c
   339  007F2E                     
   340                           ;main.c: 69:     if(rwEEPROM_temp == 0xFF)
   341  007F2E  2819               	incf	USER_EEPROMTest@rwEEPROM_temp^0,w,c
   342  007F30  A4D8               	btfss	status,2,c
   343  007F32  EF9D  F03F         	goto	u121
   344  007F36  EF9F  F03F         	goto	u120
   345  007F3A                     u121:
   346  007F3A  EFA6  F03F         	goto	l947
   347  007F3E                     u120:
   348  007F3E                     
   349                           ;main.c: 70:         EEPROMInternal_Write(0x00, 0xAA);
   350  007F3E  0EAA               	movlw	170
   351  007F40  6E01               	movwf	EEPROMInternal_Write@EEVAL^0,c
   352  007F42  0E00               	movlw	0
   353  007F44  EC69  F03F         	call	_EEPROMInternal_Write
   354  007F48  EFAB  F03F         	goto	l949
   355  007F4C                     l947:
   356  007F4C  0EFF               	movlw	255
   357  007F4E  6E01               	movwf	EEPROMInternal_Write@EEVAL^0,c
   358  007F50  0E00               	movlw	0
   359  007F52  EC69  F03F         	call	_EEPROMInternal_Write
   360  007F56                     l949:
   361                           
   362                           ;main.c: 72:     _delay((unsigned long)((50)*(64000000/4000.0)));
   363  007F56  0E05               	movlw	5
   364  007F58  6E0C               	movwf	(??_USER_EEPROMTest+1)^0,c
   365  007F5A  0E0F               	movlw	15
   366  007F5C  6E0B               	movwf	??_USER_EEPROMTest^0,c
   367  007F5E  0EF1               	movlw	241
   368  007F60                     u137:
   369  007F60  2EE8               	decfsz	wreg,f,c
   370  007F62  D7FE               	bra	u137
   371  007F64  2E0B               	decfsz	??_USER_EEPROMTest^0,f,c
   372  007F66  D7FC               	bra	u137
   373  007F68  2E0C               	decfsz	(??_USER_EEPROMTest+1)^0,f,c
   374  007F6A  D7FA               	bra	u137
   375  007F6C  F000               	nop	
   376  007F6E                     
   377                           ;main.c: 74:     EEPROMInternal_IntWrite(0x10, 0x2A3B);
   378  007F6E  0E2A               	movlw	42
   379  007F70  6E05               	movwf	(EEPROMInternal_IntWrite@AARG+1)^0,c
   380  007F72  0E3B               	movlw	59
   381  007F74  6E04               	movwf	EEPROMInternal_IntWrite@AARG^0,c
   382  007F76  0E10               	movlw	16
   383  007F78  ECD9  F03E         	call	_EEPROMInternal_IntWrite
   384  007F7C                     
   385                           ;main.c: 75:     rwEEPROM_tempINT = EEPROMInternal_IntRead(0x10);
   386  007F7C  0E10               	movlw	16
   387  007F7E  ECFC  F03E         	call	_EEPROMInternal_IntRead
   388  007F82  C002  F017         	movff	?_EEPROMInternal_IntRead,USER_EEPROMTest@rwEEPROM_tempINT
   389  007F86  C003  F018         	movff	?_EEPROMInternal_IntRead+1,USER_EEPROMTest@rwEEPROM_tempINT+1
   390  007F8A                     
   391                           ;main.c: 76:     EEPROMInternal_IntWrite(0x16, rwEEPROM_tempINT);
   392  007F8A  C017  F004         	movff	USER_EEPROMTest@rwEEPROM_tempINT,EEPROMInternal_IntWrite@AARG
   393  007F8E  C018  F005         	movff	USER_EEPROMTest@rwEEPROM_tempINT+1,EEPROMInternal_IntWrite@AARG+1
   394  007F92  0E16               	movlw	22
   395  007F94  ECD9  F03E         	call	_EEPROMInternal_IntWrite
   396  007F98                     
   397                           ;main.c: 77:     _delay((unsigned long)((50)*(64000000/4000.0)));
   398  007F98  0E05               	movlw	5
   399  007F9A  6E0C               	movwf	(??_USER_EEPROMTest+1)^0,c
   400  007F9C  0E0F               	movlw	15
   401  007F9E  6E0B               	movwf	??_USER_EEPROMTest^0,c
   402  007FA0  0EF1               	movlw	241
   403  007FA2                     u147:
   404  007FA2  2EE8               	decfsz	wreg,f,c
   405  007FA4  D7FE               	bra	u147
   406  007FA6  2E0B               	decfsz	??_USER_EEPROMTest^0,f,c
   407  007FA8  D7FC               	bra	u147
   408  007FAA  2E0C               	decfsz	(??_USER_EEPROMTest+1)^0,f,c
   409  007FAC  D7FA               	bra	u147
   410  007FAE  F000               	nop	
   411  007FB0                     
   412                           ;main.c: 79:     EEPROMInternal_WriteBuffer(0x20, wEEPROM_BUFF, 5);
   413  007FB0  0E0D               	movlw	low USER_EEPROMTest@wEEPROM_BUFF
   414  007FB2  6E04               	movwf	EEPROMInternal_WriteBuffer@EEBUFFER^0,c
   415  007FB4  0E00               	movlw	high USER_EEPROMTest@wEEPROM_BUFF
   416  007FB6  6E05               	movwf	(EEPROMInternal_WriteBuffer@EEBUFFER+1)^0,c
   417  007FB8  0E05               	movlw	5
   418  007FBA  6E06               	movwf	EEPROMInternal_WriteBuffer@LEN^0,c
   419  007FBC  0E20               	movlw	32
   420  007FBE  EC30  F03F         	call	_EEPROMInternal_WriteBuffer
   421  007FC2                     
   422                           ;main.c: 80:     EEPROMInternal_ReadBuffer(0x20, rEEPROM_BUFF, 5);
   423  007FC2  0E12               	movlw	low USER_EEPROMTest@rEEPROM_BUFF
   424  007FC4  6E02               	movwf	EEPROMInternal_ReadBuffer@EEBUFFER^0,c
   425  007FC6  0E00               	movlw	high USER_EEPROMTest@rEEPROM_BUFF
   426  007FC8  6E03               	movwf	(EEPROMInternal_ReadBuffer@EEBUFFER+1)^0,c
   427  007FCA  0E05               	movlw	5
   428  007FCC  6E04               	movwf	EEPROMInternal_ReadBuffer@LEN^0,c
   429  007FCE  0E20               	movlw	32
   430  007FD0  EC15  F03F         	call	_EEPROMInternal_ReadBuffer
   431  007FD4                     
   432                           ;main.c: 81:     EEPROMInternal_WriteBuffer(0x26, rEEPROM_BUFF, 5);
   433  007FD4  0E12               	movlw	low USER_EEPROMTest@rEEPROM_BUFF
   434  007FD6  6E04               	movwf	EEPROMInternal_WriteBuffer@EEBUFFER^0,c
   435  007FD8  0E00               	movlw	high USER_EEPROMTest@rEEPROM_BUFF
   436  007FDA  6E05               	movwf	(EEPROMInternal_WriteBuffer@EEBUFFER+1)^0,c
   437  007FDC  0E05               	movlw	5
   438  007FDE  6E06               	movwf	EEPROMInternal_WriteBuffer@LEN^0,c
   439  007FE0  0E26               	movlw	38
   440  007FE2  EC30  F03F         	call	_EEPROMInternal_WriteBuffer
   441  007FE6                     
   442                           ;main.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
   443  007FE6  0E05               	movlw	5
   444  007FE8  6E0C               	movwf	(??_USER_EEPROMTest+1)^0,c
   445  007FEA  0E0F               	movlw	15
   446  007FEC  6E0B               	movwf	??_USER_EEPROMTest^0,c
   447  007FEE  0EF1               	movlw	241
   448  007FF0                     u157:
   449  007FF0  2EE8               	decfsz	wreg,f,c
   450  007FF2  D7FE               	bra	u157
   451  007FF4  2E0B               	decfsz	??_USER_EEPROMTest^0,f,c
   452  007FF6  D7FC               	bra	u157
   453  007FF8  2E0C               	decfsz	(??_USER_EEPROMTest+1)^0,f,c
   454  007FFA  D7FA               	bra	u157
   455  007FFC  F000               	nop	
   456  007FFE  0012               	return		;funcret
   457  008000                     __end_of_USER_EEPROMTest:
   458                           	callstack 0
   459                           
   460 ;; *************** function _EEPROMInternal_WriteBuffer *****************
   461 ;; Defined at:
   462 ;;		line 126 in file "eeprom.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  EEDIR           1    wreg     unsigned char 
   465 ;;  EEBUFFER        2    3[COMRAM] PTR unsigned char 
   466 ;;		 -> USER_EEPROMTest@rEEPROM_BUFF(5), USER_EEPROMTest@wEEPROM_BUFF(5), 
   467 ;;  LEN             1    5[COMRAM] unsigned char 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  EEDIR           1    6[COMRAM] unsigned char 
   470 ;;  BUFF_COUNT      1    7[COMRAM] volatile unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   480 ;;      Params:         3       0       0       0       0       0       0
   481 ;;      Locals:         2       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0
   483 ;;      Totals:         5       0       0       0       0       0       0
   484 ;;Total ram usage:        5 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 1
   487 ;; This function calls:
   488 ;;		_EEPROMInternal_Write
   489 ;; This function is called by:
   490 ;;		_USER_EEPROMTest
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text2
   495  007E60                     __ptext2:
   496                           	callstack 0
   497  007E60                     _EEPROMInternal_WriteBuffer:
   498                           	callstack 28
   499                           
   500                           ;incstack = 0
   501                           ;EEPROMInternal_WriteBuffer@EEDIR stored from wreg
   502  007E60  6E07               	movwf	EEPROMInternal_WriteBuffer@EEDIR^0,c
   503  007E62                     
   504                           ;eeprom.c: 127:     volatile uint8_t BUFF_COUNT;;eeprom.c: 128:     for(BUFF_COUNT=0; BU
      +                          FF_COUNT<LEN; BUFF_COUNT++)
   505  007E62  0E00               	movlw	0
   506  007E64  6E08               	movwf	EEPROMInternal_WriteBuffer@BUFF_COUNT^0,c	;volatile
   507  007E66  EF42  F03F         	goto	l927
   508  007E6A                     l923:
   509                           
   510                           ;eeprom.c: 129:         EEPROMInternal_Write(EEDIR+BUFF_COUNT, EEBUFFER[BUFF_COUNT]);
   511  007E6A  5008               	movf	EEPROMInternal_WriteBuffer@BUFF_COUNT^0,w,c	;volatile
   512  007E6C  2404               	addwf	EEPROMInternal_WriteBuffer@EEBUFFER^0,w,c
   513  007E6E  6ED9               	movwf	fsr2l,c
   514  007E70  0E00               	movlw	0
   515  007E72  2005               	addwfc	(EEPROMInternal_WriteBuffer@EEBUFFER+1)^0,w,c
   516  007E74  6EDA               	movwf	fsr2h,c
   517  007E76  50DF               	movf	indf2,w,c
   518  007E78  6E01               	movwf	EEPROMInternal_Write@EEVAL^0,c
   519  007E7A  5007               	movf	EEPROMInternal_WriteBuffer@EEDIR^0,w,c
   520  007E7C  2408               	addwf	EEPROMInternal_WriteBuffer@BUFF_COUNT^0,w,c	;volatile
   521  007E7E  EC69  F03F         	call	_EEPROMInternal_Write
   522  007E82  2A08               	incf	EEPROMInternal_WriteBuffer@BUFF_COUNT^0,f,c	;volatile
   523  007E84                     l927:
   524  007E84  5006               	movf	EEPROMInternal_WriteBuffer@LEN^0,w,c
   525  007E86  5C08               	subwf	EEPROMInternal_WriteBuffer@BUFF_COUNT^0,w,c	;volatile
   526  007E88  A0D8               	btfss	status,0,c
   527  007E8A  EF49  F03F         	goto	u91
   528  007E8E  EF4B  F03F         	goto	u90
   529  007E92                     u91:
   530  007E92  EF35  F03F         	goto	l923
   531  007E96                     u90:
   532  007E96  0012               	return		;funcret
   533  007E98                     __end_of_EEPROMInternal_WriteBuffer:
   534                           	callstack 0
   535                           
   536 ;; *************** function _EEPROMInternal_ReadBuffer *****************
   537 ;; Defined at:
   538 ;;		line 142 in file "eeprom.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  EEDIR           1    wreg     unsigned char 
   541 ;;  EEBUFFER        2    1[COMRAM] PTR unsigned char 
   542 ;;		 -> USER_EEPROMTest@rEEPROM_BUFF(5), 
   543 ;;  LEN             1    3[COMRAM] unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  EEDIR           1    4[COMRAM] unsigned char 
   546 ;;  BUFF_COUNT      1    5[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   556 ;;      Params:         3       0       0       0       0       0       0
   557 ;;      Locals:         2       0       0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0
   559 ;;      Totals:         5       0       0       0       0       0       0
   560 ;;Total ram usage:        5 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 1
   563 ;; This function calls:
   564 ;;		_EEPROMInternal_Read
   565 ;; This function is called by:
   566 ;;		_USER_EEPROMTest
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text3
   571  007E2A                     __ptext3:
   572                           	callstack 0
   573  007E2A                     _EEPROMInternal_ReadBuffer:
   574                           	callstack 28
   575                           
   576                           ;incstack = 0
   577                           ;EEPROMInternal_ReadBuffer@EEDIR stored from wreg
   578  007E2A  6E05               	movwf	EEPROMInternal_ReadBuffer@EEDIR^0,c
   579  007E2C                     
   580                           ;eeprom.c: 143:     uint8_t BUFF_COUNT;;eeprom.c: 144:     for(BUFF_COUNT=0; BUFF_COUNT<
      +                          LEN; BUFF_COUNT++)
   581  007E2C  0E00               	movlw	0
   582  007E2E  6E06               	movwf	EEPROMInternal_ReadBuffer@BUFF_COUNT^0,c
   583  007E30  EF26  F03F         	goto	l935
   584  007E34                     l931:
   585                           
   586                           ;eeprom.c: 145:         *(EEBUFFER+BUFF_COUNT) = EEPROMInternal_Read(EEDIR+BUFF_COUNT);
   587  007E34  5006               	movf	EEPROMInternal_ReadBuffer@BUFF_COUNT^0,w,c
   588  007E36  2402               	addwf	EEPROMInternal_ReadBuffer@EEBUFFER^0,w,c
   589  007E38  6ED9               	movwf	fsr2l,c
   590  007E3A  0E00               	movlw	0
   591  007E3C  2003               	addwfc	(EEPROMInternal_ReadBuffer@EEBUFFER+1)^0,w,c
   592  007E3E  6EDA               	movwf	fsr2h,c
   593  007E40  5005               	movf	EEPROMInternal_ReadBuffer@EEDIR^0,w,c
   594  007E42  2406               	addwf	EEPROMInternal_ReadBuffer@BUFF_COUNT^0,w,c
   595  007E44  ECC9  F03E         	call	_EEPROMInternal_Read
   596  007E48  6EDF               	movwf	indf2,c
   597  007E4A  2A06               	incf	EEPROMInternal_ReadBuffer@BUFF_COUNT^0,f,c
   598  007E4C                     l935:
   599  007E4C  5004               	movf	EEPROMInternal_ReadBuffer@LEN^0,w,c
   600  007E4E  5C06               	subwf	EEPROMInternal_ReadBuffer@BUFF_COUNT^0,w,c
   601  007E50  A0D8               	btfss	status,0,c
   602  007E52  EF2D  F03F         	goto	u101
   603  007E56  EF2F  F03F         	goto	u100
   604  007E5A                     u101:
   605  007E5A  EF1A  F03F         	goto	l931
   606  007E5E                     u100:
   607  007E5E  0012               	return		;funcret
   608  007E60                     __end_of_EEPROMInternal_ReadBuffer:
   609                           	callstack 0
   610                           
   611 ;; *************** function _EEPROMInternal_IntWrite *****************
   612 ;; Defined at:
   613 ;;		line 108 in file "eeprom.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  EEDIR           1    wreg     unsigned char 
   616 ;;  AARG            2    3[COMRAM] unsigned short 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  EEDIR           1    7[COMRAM] unsigned char 
   619 ;;  MSB_INT         1    6[COMRAM] unsigned char 
   620 ;;  LSB_INT         1    5[COMRAM] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   630 ;;      Params:         2       0       0       0       0       0       0
   631 ;;      Locals:         3       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0
   633 ;;      Totals:         5       0       0       0       0       0       0
   634 ;;Total ram usage:        5 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 1
   637 ;; This function calls:
   638 ;;		_EEPROMInternal_Write
   639 ;; This function is called by:
   640 ;;		_USER_EEPROMTest
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text4
   645  007DB2                     __ptext4:
   646                           	callstack 0
   647  007DB2                     _EEPROMInternal_IntWrite:
   648                           	callstack 28
   649                           
   650                           ;incstack = 0
   651                           ;EEPROMInternal_IntWrite@EEDIR stored from wreg
   652  007DB2  6E08               	movwf	EEPROMInternal_IntWrite@EEDIR^0,c
   653  007DB4                     
   654                           ;eeprom.c: 109:     uint8_t LSB_INT = (uint8_t)(AARG);
   655  007DB4  C004  F006         	movff	EEPROMInternal_IntWrite@AARG,EEPROMInternal_IntWrite@LSB_INT
   656  007DB8                     
   657                           ;eeprom.c: 110:     uint8_t MSB_INT = (uint8_t)(AARG >> 8);
   658  007DB8  5005               	movf	(EEPROMInternal_IntWrite@AARG+1)^0,w,c
   659  007DBA  6E07               	movwf	EEPROMInternal_IntWrite@MSB_INT^0,c
   660  007DBC                     
   661                           ;eeprom.c: 112:     EEPROMInternal_Write(EEDIR, MSB_INT);
   662  007DBC  C007  F001         	movff	EEPROMInternal_IntWrite@MSB_INT,EEPROMInternal_Write@EEVAL
   663  007DC0  5008               	movf	EEPROMInternal_IntWrite@EEDIR^0,w,c
   664  007DC2  EC69  F03F         	call	_EEPROMInternal_Write
   665  007DC6                     
   666                           ;eeprom.c: 113:     EEPROMInternal_Write(EEDIR+1, LSB_INT);
   667  007DC6  C006  F001         	movff	EEPROMInternal_IntWrite@LSB_INT,EEPROMInternal_Write@EEVAL
   668  007DCA  2808               	incf	EEPROMInternal_IntWrite@EEDIR^0,w,c
   669  007DCC  EC69  F03F         	call	_EEPROMInternal_Write
   670  007DD0  0012               	return		;funcret
   671  007DD2                     __end_of_EEPROMInternal_IntWrite:
   672                           	callstack 0
   673                           
   674 ;; *************** function _EEPROMInternal_Write *****************
   675 ;; Defined at:
   676 ;;		line 65 in file "eeprom.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  EEDIR           1    wreg     unsigned char 
   679 ;;  EEVAL           1    0[COMRAM] unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  EEDIR           1    1[COMRAM] unsigned char 
   682 ;;  GIEBitStatus    1    2[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   692 ;;      Params:         1       0       0       0       0       0       0
   693 ;;      Locals:         2       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0
   695 ;;      Totals:         3       0       0       0       0       0       0
   696 ;;Total ram usage:        3 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_USER_EEPROMTest
   702 ;;		_EEPROMInternal_IntWrite
   703 ;;		_EEPROMInternal_WriteBuffer
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text5
   708  007ED2                     __ptext5:
   709                           	callstack 0
   710  007ED2                     _EEPROMInternal_Write:
   711                           	callstack 28
   712                           
   713                           ;incstack = 0
   714                           ;EEPROMInternal_Write@EEDIR stored from wreg
   715  007ED2  6E02               	movwf	EEPROMInternal_Write@EEDIR^0,c
   716  007ED4                     
   717                           ;eeprom.c: 66:     uint8_t GIEBitStatus = INTCONbits.GIE;
   718  007ED4  0E00               	movlw	0
   719  007ED6  BEF2               	btfsc	242,7,c	;volatile
   720  007ED8  0E01               	movlw	1
   721  007EDA  6E03               	movwf	EEPROMInternal_Write@GIEBitStatus^0,c
   722  007EDC                     
   723                           ;eeprom.c: 67:     EEADR = EEDIR;
   724  007EDC  C002  FFA9         	movff	EEPROMInternal_Write@EEDIR,4009	;volatile
   725  007EE0                     
   726                           ;eeprom.c: 68:     EEDATA = EEVAL;
   727  007EE0  C001  FFA8         	movff	EEPROMInternal_Write@EEVAL,4008	;volatile
   728  007EE4                     
   729                           ;eeprom.c: 69:     EECON1bits.EEPGD = 0;
   730  007EE4  9EA6               	bcf	166,7,c	;volsfr
   731  007EE6                     
   732                           ;eeprom.c: 70:     EECON1bits.CFGS = 0;
   733  007EE6  9CA6               	bcf	166,6,c	;volsfr
   734  007EE8                     
   735                           ;eeprom.c: 71:     EECON1bits.WREN = 1;
   736  007EE8  84A6               	bsf	166,2,c	;volsfr
   737  007EEA                     
   738                           ;eeprom.c: 72:     INTCONbits.GIE = 0;
   739  007EEA  9EF2               	bcf	242,7,c	;volatile
   740  007EEC                     
   741                           ;eeprom.c: 73:     EECON2 = 0x55;
   742  007EEC  0E55               	movlw	85
   743  007EEE  6EA7               	movwf	167,c	;volsfr
   744  007EF0                     
   745                           ;eeprom.c: 74:     EECON2 = 0xAA;
   746  007EF0  0EAA               	movlw	170
   747  007EF2  6EA7               	movwf	167,c	;volsfr
   748  007EF4                     
   749                           ;eeprom.c: 75:     EECON1bits.WR = 1;
   750  007EF4  82A6               	bsf	166,1,c	;volsfr
   751  007EF6                     l82:
   752  007EF6  A8A1               	btfss	161,4,c	;volatile
   753  007EF8  EF80  F03F         	goto	u71
   754  007EFC  EF82  F03F         	goto	u70
   755  007F00                     u71:
   756  007F00  EF7B  F03F         	goto	l82
   757  007F04                     u70:
   758  007F04                     
   759                           ;eeprom.c: 77:     PIR2bits.EEIF = 0;
   760  007F04  98A1               	bcf	161,4,c	;volatile
   761                           
   762                           ;eeprom.c: 78:     EECON1bits.WREN = 0;
   763  007F06  94A6               	bcf	166,2,c	;volsfr
   764                           
   765                           ;eeprom.c: 79:     INTCONbits.GIE = GIEBitStatus;
   766  007F08  B003               	btfsc	EEPROMInternal_Write@GIEBitStatus^0,0,c
   767  007F0A  D002               	bra	u85
   768  007F0C  9EF2               	bcf	242,7,c	;volatile
   769  007F0E  D001               	bra	u86
   770  007F10                     u85:
   771  007F10  8EF2               	bsf	242,7,c	;volatile
   772  007F12                     u86:
   773  007F12  0012               	return		;funcret
   774  007F14                     __end_of_EEPROMInternal_Write:
   775                           	callstack 0
   776                           
   777 ;; *************** function _EEPROMInternal_IntRead *****************
   778 ;; Defined at:
   779 ;;		line 90 in file "eeprom.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  EEDIR           1    wreg     unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  EEDIR           1    9[COMRAM] unsigned char 
   784 ;;  AARG            2    5[COMRAM] unsigned short 
   785 ;;  LSB_INT         1    8[COMRAM] unsigned char 
   786 ;;  MSB_INT         1    7[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2    1[COMRAM] unsigned short 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         2       0       0       0       0       0       0
   797 ;;      Locals:         5       0       0       0       0       0       0
   798 ;;      Temps:          2       0       0       0       0       0       0
   799 ;;      Totals:         9       0       0       0       0       0       0
   800 ;;Total ram usage:        9 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 1
   803 ;; This function calls:
   804 ;;		_EEPROMInternal_Read
   805 ;; This function is called by:
   806 ;;		_USER_EEPROMTest
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text6
   811  007DF8                     __ptext6:
   812                           	callstack 0
   813  007DF8                     _EEPROMInternal_IntRead:
   814                           	callstack 28
   815                           
   816                           ;incstack = 0
   817                           ;EEPROMInternal_IntRead@EEDIR stored from wreg
   818  007DF8  6E0A               	movwf	EEPROMInternal_IntRead@EEDIR^0,c
   819  007DFA                     
   820                           ;eeprom.c: 91:     uint16_t AARG;;eeprom.c: 93:     uint8_t MSB_INT = EEPROMInternal_Rea
      +                          d(EEDIR);
   821  007DFA  500A               	movf	EEPROMInternal_IntRead@EEDIR^0,w,c
   822  007DFC  ECC9  F03E         	call	_EEPROMInternal_Read
   823  007E00  6E08               	movwf	EEPROMInternal_IntRead@MSB_INT^0,c
   824  007E02                     
   825                           ;eeprom.c: 94:     uint8_t LSB_INT = EEPROMInternal_Read(EEDIR+1);
   826  007E02  280A               	incf	EEPROMInternal_IntRead@EEDIR^0,w,c
   827  007E04  ECC9  F03E         	call	_EEPROMInternal_Read
   828  007E08  6E09               	movwf	EEPROMInternal_IntRead@LSB_INT^0,c
   829  007E0A                     
   830                           ;eeprom.c: 95:     AARG = (MSB_INT<<8)|LSB_INT;
   831  007E0A  5009               	movf	EEPROMInternal_IntRead@LSB_INT^0,w,c
   832  007E0C  C008  F004         	movff	EEPROMInternal_IntRead@MSB_INT,??_EEPROMInternal_IntRead
   833  007E10  6A05               	clrf	(??_EEPROMInternal_IntRead+1)^0,c
   834  007E12  C004  F005         	movff	??_EEPROMInternal_IntRead,??_EEPROMInternal_IntRead+1
   835  007E16  6A04               	clrf	??_EEPROMInternal_IntRead^0,c
   836  007E18  1004               	iorwf	??_EEPROMInternal_IntRead^0,w,c
   837  007E1A  6E06               	movwf	EEPROMInternal_IntRead@AARG^0,c
   838  007E1C  5005               	movf	(??_EEPROMInternal_IntRead+1)^0,w,c
   839  007E1E  6E07               	movwf	(EEPROMInternal_IntRead@AARG+1)^0,c
   840  007E20                     
   841                           ;eeprom.c: 96:     return AARG;
   842  007E20  C006  F002         	movff	EEPROMInternal_IntRead@AARG,?_EEPROMInternal_IntRead
   843  007E24  C007  F003         	movff	EEPROMInternal_IntRead@AARG+1,?_EEPROMInternal_IntRead+1
   844  007E28  0012               	return		;funcret
   845  007E2A                     __end_of_EEPROMInternal_IntRead:
   846                           	callstack 0
   847                           
   848 ;; *************** function _EEPROMInternal_Read *****************
   849 ;; Defined at:
   850 ;;		line 48 in file "eeprom.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  EEDIR           1    wreg     unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  EEDIR           1    0[COMRAM] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      unsigned char 
   857 ;; Registers used:
   858 ;;		wreg, status,2
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   864 ;;      Params:         0       0       0       0       0       0       0
   865 ;;      Locals:         1       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0
   867 ;;      Totals:         1       0       0       0       0       0       0
   868 ;;Total ram usage:        1 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_USER_EEPROMTest
   874 ;;		_EEPROMInternal_IntRead
   875 ;;		_EEPROMInternal_ReadBuffer
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text7
   880  007D92                     __ptext7:
   881                           	callstack 0
   882  007D92                     _EEPROMInternal_Read:
   883                           	callstack 28
   884                           
   885                           ;incstack = 0
   886                           ;EEPROMInternal_Read@EEDIR stored from wreg
   887  007D92  6E01               	movwf	EEPROMInternal_Read@EEDIR^0,c
   888  007D94                     
   889                           ;eeprom.c: 49:     EEADR = EEDIR;
   890  007D94  C001  FFA9         	movff	EEPROMInternal_Read@EEDIR,4009	;volatile
   891  007D98                     
   892                           ;eeprom.c: 50:     EECON1bits.EEPGD = 0;
   893  007D98  9EA6               	bcf	166,7,c	;volsfr
   894  007D9A                     
   895                           ;eeprom.c: 51:     EECON1bits.CFGS = 0;
   896  007D9A  9CA6               	bcf	166,6,c	;volsfr
   897  007D9C                     
   898                           ;eeprom.c: 52:     EECON1bits.RD = 1;
   899  007D9C  80A6               	bsf	166,0,c	;volsfr
   900  007D9E                     
   901                           ;eeprom.c: 53:     return EEDATA;
   902  007D9E  50A8               	movf	168,w,c	;volatile
   903  007DA0  0012               	return		;funcret
   904  007DA2                     __end_of_EEPROMInternal_Read:
   905                           	callstack 0
   906                           
   907 ;; *************** function _MCU_Init *****************
   908 ;; Defined at:
   909 ;;		line 35 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   923 ;;      Params:         0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text8
   937  007E98                     __ptext8:
   938                           	callstack 0
   939  007E98                     _MCU_Init:
   940                           	callstack 30
   941  007E98                     
   942                           ;main.c: 37:     ANSELA = 0x00;
   943  007E98  0E00               	movlw	0
   944  007E9A  010F               	movlb	15	; () banked
   945  007E9C  6F38               	movwf	56,b	;volatile
   946                           
   947                           ;main.c: 38:     ANSELB = 0x00;
   948  007E9E  0E00               	movlw	0
   949  007EA0  6F39               	movwf	57,b	;volatile
   950                           
   951                           ;main.c: 39:     ANSELC = 0x00;
   952  007EA2  0E00               	movlw	0
   953  007EA4  6F3A               	movwf	58,b	;volatile
   954                           
   955                           ;main.c: 42:     OSCCONbits.IRCF = 0b111;
   956  007EA6  0E70               	movlw	112
   957  007EA8  12D3               	iorwf	211,f,c	;volatile
   958  007EAA                     
   959                           ; BSR set to: 15
   960                           ;main.c: 44:     OSCTUNEbits.PLLEN = 1;
   961  007EAA  8C9B               	bsf	155,6,c	;volatile
   962                           
   963                           ;main.c: 47:     TRISA = 0b00000000;
   964  007EAC  0E00               	movlw	0
   965  007EAE  6E92               	movwf	146,c	;volatile
   966                           
   967                           ;main.c: 48:     TRISB = 0b00000000;
   968  007EB0  0E00               	movlw	0
   969  007EB2  6E93               	movwf	147,c	;volatile
   970                           
   971                           ;main.c: 49:     TRISC = 0b00000000;
   972  007EB4  0E00               	movlw	0
   973  007EB6  6E94               	movwf	148,c	;volatile
   974                           
   975                           ;main.c: 52:     LATA = 0x00;
   976  007EB8  0E00               	movlw	0
   977  007EBA  6E89               	movwf	137,c	;volatile
   978                           
   979                           ;main.c: 53:     LATB = 0x00;
   980  007EBC  0E00               	movlw	0
   981  007EBE  6E8A               	movwf	138,c	;volatile
   982                           
   983                           ;main.c: 54:     LATC = 0x00;
   984  007EC0  0E00               	movlw	0
   985  007EC2  6E8B               	movwf	139,c	;volatile
   986                           
   987                           ;main.c: 56:     PORTA = 0x00;
   988  007EC4  0E00               	movlw	0
   989  007EC6  6E80               	movwf	128,c	;volatile
   990                           
   991                           ;main.c: 57:     PORTB = 0x00;
   992  007EC8  0E00               	movlw	0
   993  007ECA  6E81               	movwf	129,c	;volatile
   994                           
   995                           ;main.c: 58:     PORTC = 0x00;
   996  007ECC  0E00               	movlw	0
   997  007ECE  6E82               	movwf	130,c	;volatile
   998  007ED0                     
   999                           ; BSR set to: 15
  1000  007ED0  0012               	return		;funcret
  1001  007ED2                     __end_of_MCU_Init:
  1002                           	callstack 0
  1003  0000                     
  1004                           	psect	rparam
  1005  0000                     
  1006                           	psect	idloc
  1007                           
  1008                           ;Config register IDLOC0 @ 0x200000
  1009                           ;	unspecified, using default values
  1010  200000                     	org	2097152
  1011  200000  FF                 	db	255
  1012                           
  1013                           ;Config register IDLOC1 @ 0x200001
  1014                           ;	unspecified, using default values
  1015  200001                     	org	2097153
  1016  200001  FF                 	db	255
  1017                           
  1018                           ;Config register IDLOC2 @ 0x200002
  1019                           ;	unspecified, using default values
  1020  200002                     	org	2097154
  1021  200002  FF                 	db	255
  1022                           
  1023                           ;Config register IDLOC3 @ 0x200003
  1024                           ;	unspecified, using default values
  1025  200003                     	org	2097155
  1026  200003  FF                 	db	255
  1027                           
  1028                           ;Config register IDLOC4 @ 0x200004
  1029                           ;	unspecified, using default values
  1030  200004                     	org	2097156
  1031  200004  FF                 	db	255
  1032                           
  1033                           ;Config register IDLOC5 @ 0x200005
  1034                           ;	unspecified, using default values
  1035  200005                     	org	2097157
  1036  200005  FF                 	db	255
  1037                           
  1038                           ;Config register IDLOC6 @ 0x200006
  1039                           ;	unspecified, using default values
  1040  200006                     	org	2097158
  1041  200006  FF                 	db	255
  1042                           
  1043                           ;Config register IDLOC7 @ 0x200007
  1044                           ;	unspecified, using default values
  1045  200007                     	org	2097159
  1046  200007  FF                 	db	255
  1047                           
  1048                           	psect	config
  1049                           
  1050                           ; Padding undefined space
  1051  300000                     	org	3145728
  1052  300000  FF                 	db	255
  1053                           
  1054                           ;Config register CONFIG1H @ 0x300001
  1055                           ;	Oscillator Selection bits
  1056                           ;	FOSC = INTIO67, Internal oscillator block
  1057                           ;	4X PLL Enable
  1058                           ;	PLLCFG = OFF, Oscillator used directly
  1059                           ;	Primary clock enable bit
  1060                           ;	PRICLKEN = ON, Primary clock enabled
  1061                           ;	Fail-Safe Clock Monitor Enable bit
  1062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1063                           ;	Internal/External Oscillator Switchover bit
  1064                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1065  300001                     	org	3145729
  1066  300001  28                 	db	40
  1067                           
  1068                           ;Config register CONFIG2L @ 0x300002
  1069                           ;	Power-up Timer Enable bit
  1070                           ;	PWRTEN = OFF, Power up timer disabled
  1071                           ;	Brown-out Reset Enable bits
  1072                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1073                           ;	Brown Out Reset Voltage bits
  1074                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1075  300002                     	org	3145730
  1076  300002  19                 	db	25
  1077                           
  1078                           ;Config register CONFIG2H @ 0x300003
  1079                           ;	Watchdog Timer Enable bits
  1080                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1081                           ;	Watchdog Timer Postscale Select bits
  1082                           ;	WDTPS = 32768, 1:32768
  1083  300003                     	org	3145731
  1084  300003  3C                 	db	60
  1085                           
  1086                           ; Padding undefined space
  1087  300004                     	org	3145732
  1088  300004  FF                 	db	255
  1089                           
  1090                           ;Config register CONFIG3H @ 0x300005
  1091                           ;	CCP2 MUX bit
  1092                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1093                           ;	PORTB A/D Enable bit
  1094                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1095                           ;	P3A/CCP3 Mux bit
  1096                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1097                           ;	HFINTOSC Fast Start-up
  1098                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  1099                           ;	Timer3 Clock input mux bit
  1100                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1101                           ;	ECCP2 B output mux bit
  1102                           ;	P2BMX = PORTB5, P2B is on RB5
  1103                           ;	MCLR Pin Enable bit
  1104                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1105  300005                     	org	3145733
  1106  300005  B5                 	db	181
  1107                           
  1108                           ;Config register CONFIG4L @ 0x300006
  1109                           ;	Stack Full/Underflow Reset Enable bit
  1110                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1111                           ;	Single-Supply ICSP Enable bit
  1112                           ;	LVP = OFF, Single-Supply ICSP disabled
  1113                           ;	Extended Instruction Set Enable bit
  1114                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1115                           ;	Background Debug
  1116                           ;	DEBUG = 0x1, unprogrammed default
  1117  300006                     	org	3145734
  1118  300006  81                 	db	129
  1119                           
  1120                           ; Padding undefined space
  1121  300007                     	org	3145735
  1122  300007  FF                 	db	255
  1123                           
  1124                           ;Config register CONFIG5L @ 0x300008
  1125                           ;	Code Protection Block 0
  1126                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1127                           ;	Code Protection Block 1
  1128                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1129                           ;	Code Protection Block 2
  1130                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1131                           ;	Code Protection Block 3
  1132                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1133  300008                     	org	3145736
  1134  300008  0F                 	db	15
  1135                           
  1136                           ;Config register CONFIG5H @ 0x300009
  1137                           ;	Boot Block Code Protection bit
  1138                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1139                           ;	Data EEPROM Code Protection bit
  1140                           ;	CPD = OFF, Data EEPROM not code-protected
  1141  300009                     	org	3145737
  1142  300009  C0                 	db	192
  1143                           
  1144                           ;Config register CONFIG6L @ 0x30000A
  1145                           ;	Write Protection Block 0
  1146                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1147                           ;	Write Protection Block 1
  1148                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1149                           ;	Write Protection Block 2
  1150                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1151                           ;	Write Protection Block 3
  1152                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1153  30000A                     	org	3145738
  1154  30000A  0F                 	db	15
  1155                           
  1156                           ;Config register CONFIG6H @ 0x30000B
  1157                           ;	Configuration Register Write Protection bit
  1158                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1159                           ;	Boot Block Write Protection bit
  1160                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1161                           ;	Data EEPROM Write Protection bit
  1162                           ;	WRTD = OFF, Data EEPROM not write-protected
  1163  30000B                     	org	3145739
  1164  30000B  E0                 	db	224
  1165                           
  1166                           ;Config register CONFIG7L @ 0x30000C
  1167                           ;	Table Read Protection Block 0
  1168                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1169                           ;	Table Read Protection Block 1
  1170                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1171                           ;	Table Read Protection Block 2
  1172                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1173                           ;	Table Read Protection Block 3
  1174                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1175  30000C                     	org	3145740
  1176  30000C  0F                 	db	15
  1177                           
  1178                           ;Config register CONFIG7H @ 0x30000D
  1179                           ;	Boot Block Table Read Protection bit
  1180                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1181  30000D                     	org	3145741
  1182  30000D  40                 	db	64
  1183                           tosu	equ	0xFFF
  1184                           tosh	equ	0xFFE
  1185                           tosl	equ	0xFFD
  1186                           stkptr	equ	0xFFC
  1187                           pclatu	equ	0xFFB
  1188                           pclath	equ	0xFFA
  1189                           pcl	equ	0xFF9
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           prodh	equ	0xFF4
  1195                           prodl	equ	0xFF3
  1196                           indf0	equ	0xFEF
  1197                           postinc0	equ	0xFEE
  1198                           postdec0	equ	0xFED
  1199                           preinc0	equ	0xFEC
  1200                           plusw0	equ	0xFEB
  1201                           fsr0h	equ	0xFEA
  1202                           fsr0l	equ	0xFE9
  1203                           wreg	equ	0xFE8
  1204                           indf1	equ	0xFE7
  1205                           postinc1	equ	0xFE6
  1206                           postdec1	equ	0xFE5
  1207                           preinc1	equ	0xFE4
  1208                           plusw1	equ	0xFE3
  1209                           fsr1h	equ	0xFE2
  1210                           fsr1l	equ	0xFE1
  1211                           bsr	equ	0xFE0
  1212                           indf2	equ	0xFDF
  1213                           postinc2	equ	0xFDE
  1214                           postdec2	equ	0xFDD
  1215                           preinc2	equ	0xFDC
  1216                           plusw2	equ	0xFDB
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    EEPROMInternal_ReadBuffer@EEBUFFER	PTR unsigned char  size(2) Largest target is 5
		 -> USER_EEPROMTest@rEEPROM_BUFF(COMRAM[5]), 

    EEPROMInternal_WriteBuffer@EEBUFFER	PTR unsigned char  size(2) Largest target is 5
		 -> USER_EEPROMTest@rEEPROM_BUFF(COMRAM[5]), USER_EEPROMTest@wEEPROM_BUFF(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_USER_EEPROMTest
    _USER_EEPROMTest->_EEPROMInternal_IntRead
    _EEPROMInternal_WriteBuffer->_EEPROMInternal_Write
    _EEPROMInternal_ReadBuffer->_EEPROMInternal_Read
    _EEPROMInternal_IntWrite->_EEPROMInternal_Write
    _EEPROMInternal_IntRead->_EEPROMInternal_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2627
                           _MCU_Init
                    _USER_EEPROMTest
 ---------------------------------------------------------------------------------
 (1) _USER_EEPROMTest                                     15    15      0    2627
                                             10 COMRAM    15    15      0
             _EEPROMInternal_IntRead
            _EEPROMInternal_IntWrite
                _EEPROMInternal_Read
          _EEPROMInternal_ReadBuffer
               _EEPROMInternal_Write
         _EEPROMInternal_WriteBuffer
 ---------------------------------------------------------------------------------
 (2) _EEPROMInternal_WriteBuffer                           5     2      3     885
                                              3 COMRAM     5     2      3
               _EEPROMInternal_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROMInternal_ReadBuffer                            5     2      3     301
                                              1 COMRAM     5     2      3
                _EEPROMInternal_Read
 ---------------------------------------------------------------------------------
 (2) _EEPROMInternal_IntWrite                              5     3      2     733
                                              3 COMRAM     5     3      2
               _EEPROMInternal_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROMInternal_Write                                 3     2      1     447
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _EEPROMInternal_IntRead                               9     7      2     128
                                              1 COMRAM     9     7      2
                _EEPROMInternal_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROMInternal_Read                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCU_Init
   _USER_EEPROMTest
     _EEPROMInternal_IntRead
       _EEPROMInternal_Read
     _EEPROMInternal_IntWrite
       _EEPROMInternal_Write
     _EEPROMInternal_Read
     _EEPROMInternal_ReadBuffer
       _EEPROMInternal_Read
     _EEPROMInternal_Write
     _EEPROMInternal_WriteBuffer
       _EEPROMInternal_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1E       1       31.6%
BITBIGSFRlllll      45      0       0      23        0.0%
BITBIGSFRlhh        29      0       0      17        0.0%
BITBIGSFRhl         1E      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRllllh       6      0       0      22        0.0%
BITBIGSFRlllh        6      0       0      21        0.0%
BITBIGSFRllh         6      0       0      20        0.0%
BITBIGSFRlhlll       5      0       0      19        0.0%
BITBIGSFRlhllh       4      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      24        0.0%
DATA                 0      0      1E      26        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Sep 06 18:40:18 2025

                                  l51 7DAA                                    l52 7DAA  
                                  l64 7FFE                                    l57 7ED0  
                                  l82 7EF6                                    l91 7DD0  
                                  l84 7F04                                    l85 7F12  
                                  l79 7DA0                                    l88 7E28  
                                  l97 7E96                                    u70 7F04  
                                  u71 7F00                                    u90 7E96  
                                  u91 7E92                                    u85 7F10  
                                  u86 7F12                                   l103 7E5E  
                                 l901 7EF4                                   l911 7DFA  
                                 l903 7DB4                                   l913 7E02  
                                 l905 7DB8                                   l921 7E62  
                                 l915 7E0A                                   l907 7DBC  
                                 l931 7E34                                   l923 7E6A  
                                 l845 7E98                                   l781 7D98  
                                 l917 7E20                                   l909 7DC6  
                                 l933 7E4A                                   l925 7E82  
                                 l941 7F26                                   l847 7EAA  
                                 l783 7D9A                                   l935 7E4C  
                                 l927 7E84                                   l951 7F6E  
                                 l943 7F2E                                   l785 7D9C  
                                 l929 7E2C                                   l961 7FC2  
                                 l953 7F7C                                   l945 7F3E  
                                 l937 7F14                                   l787 7D9E  
                                 l779 7D94                                   l891 7EE6  
                                 l883 7ED4                                   l963 7FD4  
                                 l955 7F8A                                   l947 7F4C  
                                 l939 7F14                                   l893 7EE8  
                                 l885 7EDC                                   l965 7FE6  
                                 l957 7F98                                   l949 7F56  
                                 l895 7EEA                                   l887 7EE0  
                                 l959 7FB0                                   l967 7DA2  
                                 l897 7EEC                                   l889 7EE4  
                                 l969 7DA6                                   l899 7EF0  
                                 u100 7E5E                                   u101 7E5A  
                                 u111 7F1E                                   u120 7F3E  
                                 u121 7F3A                                   u137 7F60  
                                 u147 7FA2                                   u157 7FF0  
                                 wreg 000FE8                                  _LATA 000F89  
                                _LATB 000F8A                                  _LATC 000F8B  
                                _main 7DA2                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
             _EEPROMInternal_IntWrite 7DB2                                  start 0000  
                        ___param_bank 000000                                 ?_main 0001  
                               _EEADR 000FA9                      __end_of_MCU_Init 7ED2  
                               _PORTA 000F80                                 _PORTB 000F81  
                               _PORTC 000F82                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               tablat 000FF5               __end_of_USER_EEPROMTest 8000  
        EEPROMInternal_ReadBuffer@LEN 0004                                 plusw1 000FE3  
                               plusw2 000FDB                                 status 000FD8  
                     __initialization 7DD2                          __end_of_main 7DB2  
         EEPROMInternal_IntWrite@AARG 0004           ?_EEPROMInternal_WriteBuffer 0004  
                              ??_main 001A                         __activetblptr 000000  
                              _EEDATA 000FA8                                _EECON2 000FA7  
                              _ANSELA 000F38                                _ANSELB 000F39  
                              _ANSELC 000F3A             ??_EEPROMInternal_IntWrite 0006  
                 _EEPROMInternal_Read 7D92          __end_of_EEPROMInternal_Write 7F14  
                              isa$std 000001                  ?_EEPROMInternal_Read 0001  
        USER_EEPROMTest@rwEEPROM_temp 0019                          __pdataCOMRAM 001A  
      EEPROMInternal_ReadBuffer@EEDIR 0005                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                    ?_USER_EEPROMTest 0001         EEPROMInternal_WriteBuffer@LEN 0006  
                          __accesstop 0060               __end_of__initialization 7DF2  
  EEPROMInternal_WriteBuffer@EEBUFFER 0004                         ___rparam_used 000001  
                           ?_MCU_Init 0001                        __pcstackCOMRAM 0001  
        EEPROMInternal_IntWrite@EEDIR 0008                 ??_EEPROMInternal_Read 0001  
            ??_EEPROMInternal_IntRead 0004           USER_EEPROMTest@rEEPROM_BUFF 0012  
            EEPROMInternal_Read@EEDIR 0001                            ??_MCU_Init 0001  
                USER_EEPROMTest@F5775 001A                  _EEPROMInternal_Write 7ED2  
                             __Hparam 0000                               __Lparam 0000  
                             __pcinit 7DD2                               __ramtop 0600  
                             __ptext0 7DA2                               __ptext1 7F14  
                             __ptext2 7E60                               __ptext3 7E2A  
                             __ptext4 7DB2                               __ptext5 7ED2  
                             __ptext6 7DF8                               __ptext7 7D92  
                             __ptext8 7E98            ?_EEPROMInternal_ReadBuffer 0002  
                end_of_initialization 7DF2                 ?_EEPROMInternal_Write 0001  
                             postdec1 000FE5                               postinc0 000FEE  
         USER_EEPROMTest@wEEPROM_BUFF 000D            EEPROMInternal_IntRead@AARG 0006  
   __end_of_EEPROMInternal_ReadBuffer 7E60             EEPROMInternal_Write@EEDIR 0002  
           EEPROMInternal_Write@EEVAL 0001                _EEPROMInternal_IntRead 7DF8  
                       __pidataCOMRAM 7D8D                   start_initialization 7DD2  
            ?_EEPROMInternal_IntWrite 0004      EEPROMInternal_Write@GIEBitStatus 0003  
       EEPROMInternal_IntRead@LSB_INT 0009         EEPROMInternal_IntRead@MSB_INT 0008  
              ??_EEPROMInternal_Write 0002           __end_of_EEPROMInternal_Read 7DA2  
        ??_EEPROMInternal_WriteBuffer 0007       __end_of_EEPROMInternal_IntWrite 7DD2  
 EEPROMInternal_ReadBuffer@BUFF_COUNT 0006           ??_EEPROMInternal_ReadBuffer 0005  
                            _MCU_Init 7E98                              _PIR2bits 000FA1  
                   ??_USER_EEPROMTest 000B       EEPROMInternal_WriteBuffer@EEDIR 0007  
                           copy_data0 7DE6               ?_EEPROMInternal_IntRead 0002  
                          _EECON1bits 000FA6                              __Hrparam 0000  
                            __Lrparam 0000             _EEPROMInternal_ReadBuffer 7E2A  
EEPROMInternal_WriteBuffer@BUFF_COUNT 0008        __end_of_EEPROMInternal_IntRead 7E2A  
                            isa$xinst 000000    __end_of_EEPROMInternal_WriteBuffer 7E98  
          _EEPROMInternal_WriteBuffer 7E60                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2        EEPROMInternal_IntWrite@LSB_INT 0006  
      EEPROMInternal_IntWrite@MSB_INT 0007                            _OSCCONbits 000FD3  
   EEPROMInternal_ReadBuffer@EEBUFFER 0002       USER_EEPROMTest@rwEEPROM_tempINT 0017  
         EEPROMInternal_IntRead@EEDIR 000A                       _USER_EEPROMTest 7F14  
